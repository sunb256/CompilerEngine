' (BNF構文)

'  03
'------------------------
'  Program ::= 式
'  式      ::= 数値
'------------------------

'  03 - d
'---------------------------------------------------------
'  Program   ::= 式 ';'
'  式 (Expr) ::= 項
'              | 項 [ ( '+' | '-' | '*' | '/' ) ] 項*

'  項 (Term) ::= 数値
'---------------------------------------------------------

'  03 - e
'---------------------------------------------------------
'  Program      ::= 式 ';'
'  式  (Expr)   ::= 項   [ ( '+' | '-' ) ] 項*
'  項  (Term)   ::= 因子 [ ( '*' | '/' ) ] 因子*
'  因子(Factor) ::= 数値
'---------------------------------------------------------
=
'---------------------------------------------------------
'  Program    ::= Expression ';'
'  Exprssion  ::= Term   [ ( '+' | '-' ) ] Term *
'  Term       ::= Factor [ ( '*' | '/' ) ] Factor *
'  Factor     ::= Number
'---------------------------------------------------------

' 3 - f
'---------------------------------------------------------
'  Program    ::= Expression ';'
'  Exprssion  ::= Term   [ ( '+' | '-' ) ] Term *
'  Term       ::= Factor [ ( '*' | '/' ) ] Factor *
'  Factor     ::= Number | '-'Term
'---------------------------------------------------------

'  04
'---------------------------------------------------------
'  Program      ::= 式 ';'
'  式 (Expr)    ::= 項   [ ('+' | '-' ) 項   ] *
'  項 (Term)    ::= 因子 [ ('*' | '/' ) 因子 ] *
'  因子(Factor) ::= 数値
'                 | '-'因子
'                 | '(' 式 ')'
'---------------------------------------------------------
'---------------------------------------------------------
'  Program    ::= Expression ';'
'  Exprssion  ::= Term   [ ( '+' | '-' ) ] Term *
'  Term       ::= Factor [ ( '*' | '/' ) ] Factor *
'  Factor     ::= Number | '-'Term  | '(' Expression ')'
'---------------------------------------------------------


'  05
'---------------------------------------------------------
'  Program      ::= 式 ';'
'  式 (Expr)    ::= 項   [ ('+' | '-' ) 項   ] *
'  項 (Term)    ::= 因子 [ ('*' | '/' ) 因子 ] *
'  因子(Factor) ::=  数値
'                  | 文字列
'                  | '-'因子
'                  | '(' 式 ')'
'                  | シンボル
'                  | シンボル '=' 式
'---------------------------------------------------------
'---------------------------------------------------------
'  Program    ::= Expression ';'
'  Exprssion  ::= Term   [ ( '+' | '-' ) ] Term *
'  Term       ::= Factor [ ( '*' | '/' ) ] Factor *
'  Factor     ::= Number 
                | '-' Term 
							  | '(' Expression ')'
							  | Symbol
							  | Symbol '=' Expression
'---------------------------------------------------------


'  06-1
'---------------------------------------------------------
'  Program    ::= Expression ';'
'  Exprssion  ::= Term   [ ( '+' | '-' ) ] Term *
'  Term       ::= Factor [ ( '*' | '/' ) ] Factor *
'  Factor     ::= Number 
                | string
                | true
                | false
                | '-' Term 
							  | '(' Expression ')'
							  | Symbol
							  | Symbol '=' Expression
'---------------------------------------------------------

'  06-2
'-------------------------------------------------------------------------------------
'  Program             ::= 式 ';'
'  式 (Expr)           ::= 単純式 [ ( '==' | '!=' | '<' | '>' | '<=' | '>=' | )] 単純式*
'  単純式 (SimpleExpr) ::= 項   [ ('+' | '-' | '||' ) 項   ] *
'  項 (Term)           ::= 因子 [ ('*' | '/' | '&&' ) 因子 ] *
'  因子(Factor)        ::=  数値
'                         | 文字列
'                         | 真
'                         | 偽
'                         | '-' 因子
'                         | '!' 因子
'                         | '(' 式 ')'
'                         | シンボル
'                         | シンボル '=' 式
'-------------------------------------------------------------------------------------
'---------------------------------------------------------------------------------------------
'  Program    ::= Expression ';'
'  Expression ::= SimpleExpr [ ( '==' | '!=' | '<' | '>' | '<=' | '>=' | ) SimpleExpr * ] 
'  SimpleExpr ::= Term   [ ( '+' | '-' | '||' ) Term   * ]
'  Term       ::= Factor [ ( '*' | '/' | '&&' ) Factor * ] 
'  Factor     ::= Number 
                | string
                | true
                | false
                | '-' Term 
							  | '!' Term
							  | '(' Expression ')'
							  | Symbol
							  | Symbol '=' Expression
'---------------------------------------------------------------------------------------------

'  06-3,4
'-------------------------------------------------------------------------------------
'  Program             ::= 文 ';'
'  文                  ::= if文 
'                        | while文 
'                        | 式 
'  if文   (if_Stmt)    ::= 'if'    '(' 式 ')' 文 [ 'else' 文 ]
'  while文(while_Stmt) ::= 'while' '(' 式 ')'
'  式  (Expr)          ::= 単純式 [ ( '==' | '!=' | '<' | '>' | '<=' | '>=' | )] 単純式*
'  単純式 (SimpleExpr) ::= 項     [ ('+' | '-' | '||' ) 項   ] *
'  項 (Term)           ::= 因子   [ ('*' | '/' | '&&' ) 因子 ] *
'  因子(Factor)        ::= 数値
'                        | 文字列
'                        | 真
'                        | 偽
'                        | '-' 因子
'                        | '!' 因子
'                        | '(' 式 ')'
'                        | シンボル
'                        | シンボル '=' 式
'-------------------------------------------------------------------------------------
'---------------------------------------------------------------------------------------------
'  Program    ::= Expression ';'
'  Statement  ::= if stmt 
                | Expression
'  if stmt    ::= 'if (' Expression ')' Statement [ 'else' Statement ]
'  Expression ::= SimpleExpr [ ( '==' | '!=' | '<' | '>' | '<=' | '>=' | ) SimpleExpr * ] 
'  SimpleExpr ::= Term   [ ( '+' | '-' | '||' ) Term   * ]
'  Term       ::= Factor [ ( '*' | '/' | '&&' ) Factor * ] 
'  Factor     ::= Number 
                | string
                | true
                | false
                | '-' Term 
							  | '!' Term
							  | '(' Expression ')'
							  | Symbol
							  | Symbol '=' Expression
'---------------------------------------------------------------------------------------------


'  06-3,4
'-------------------------------------------------------------------------------------
'  Program             ::= 文 ';'
'  文                  ::= if文 
'                        | while文 
'                        | 式 
'                        | ブロック文
'
'  if文   (if_Stmt)    ::= 'if'    '(' 式 ')' 文 [ 'else' 文 ]
'  while文(while_Stmt) ::= 'while' '(' 式 ')'
'  block文(block)      ::= '{' [ 文 ';' ] *  '}'
'
'  式  (Expr)          ::= 単純式 [ ( '==' | '!=' | '<' | '>' | '<=' | '>=' | )] 単純式*
'  単純式 (SimpleExpr) ::= 項     [ ('+' | '-' | '||' ) 項   ] *
'  項 (Term)           ::= 因子   [ ('*' | '/' | '&&' ) 因子 ] *
'
'  因子(Factor)        ::= 数値
'                        | 文字列
'                        | 真
'                        | 偽
'                        | '-' 因子
'                        | '!' 因子
'                        | '(' 式 ')'
'                        | シンボル
'                        | シンボル '=' 式
'-------------------------------------------------------------------------------------

'  07-02
'-------------------------------------------------------------------------------------
'  Program             ::= 文 ';'
'  文                  ::= if文 
'                        | while文 
'                        | 式 
'                        | ブロック文
'
'  if文   (if_Stmt)    ::= 'if'    '(' 式 ')' 文 [ 'else' 文 ]
'  while文(while_Stmt) ::= 'while' '(' 式 ')'
'  block文(block)      ::= '{' [ 文 ';' ] *  '}'
'
'  式  (Expr)          ::= 単純式 [ ( '==' | '!=' | '<' | '>' | '<=' | '>=' | )] 単純式*
'  単純式 (SimpleExpr) ::= 項     [ ('+' | '-' | '||' ) 項   ] *
'  項 (Term)           ::= 因子   [ ('*' | '/' | '&&' ) 因子 ] *
'
'  因子(Factor)        ::= 数値
'                        | 文字列
'                        | 真
'                        | 偽
'                        | '-' 因子
'                        | '!' 因子
'                        | '(' 式 ')'
'                        | シンボル
'                        | シンボル '=' 式
'                        | 関数呼出し
'
'  関数呼出し          ::= シンボル '(' 引数 ')'
'  引数                ::= [ 式 [ ',' 式 ] * ]
'
'-------------------------------------------------------------------------------------


'  07-02
'-------------------------------------------------------------------------------------
'  Program             ::= 文 ';'
'  文                  ::= if文 
'                        | while文 
'                        | 式 
'                        | ブロック文
'                        | 関数宣言
'                        | 変数宣言
'
'  関数宣言            ::= 'func' シンボル '(' func引数 ')' ブロック文
'  func引数            ::= シンボル [ ',' シンボル ] * ]
'
'  変数宣言            ::= 'def' シンボル
'                        | 'def' シンボル  '=' 式
'
'  if文   (if_Stmt)    ::= 'if'    '(' 式 ')' 文 [ 'else' 文 ]
'  while文(while_Stmt) ::= 'while' '(' 式 ')'
'  block文(block)      ::= '{' [ 文 ';' ] *  '}'
'
'  式     (Expr)       ::= 単純式 [ ( '==' | '!=' | '<' | '>' | '<=' | '>=' | )] 単純式*
'  単純式 (SimpleExpr) ::= 項     [ ('+' | '-' | '||' ) 項   ] *
'  項     (Term)       ::= 因子   [ ('*' | '/' | '&&' ) 因子 ] *
'
'  因子   (Factor)     ::= 数値
'                        | 文字列
'                        | 真
'                        | 偽
'                        | '-' 因子
'                        | '!' 因子
'                        | '(' 式 ')'
'                        | シンボル
'                        | シンボル '=' 式
'                        | 関数呼出し
'
'  関数呼出し          ::= シンボル '(' System引数 ')'
'  System引数          ::= [ 式 [ ',' 式 ] * ]
'
'-------------------------------------------------------------------------------------











